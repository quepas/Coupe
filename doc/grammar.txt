coupe := import | extern | definition | maincode 

import := TOK_KW_IMPORT['import'] TOK_IDENTIFIER 
extern := TOK_KW_EXTERN['extern'] prototype 
definition := TOK_KW_DEF prototype 
				  expression 
			  TOK_KW_END 
maincode := expression // TODO: body := expression*

prototype := TOK_IDENTIFIER 
				TOK_ROUND_LEFT_BRACKET['('] 
					TOK_IDENTIFIER* 
				TOK_ROUND_RIGHT_BRACKET[')'] 
expression := primary binoprhs*

primary := identifierExpr | numberExpr | parenthesisExpr | patternExpr
identifierExpr := TOK_IDENTIFIER | 
				  TOK_IDENTIFIER 
					  TOK_ROUND_LEFT_BRACKET['(']
						  expression* (TOK_COMMA[','] expression)*
					  TOK_ROUND_RIGHT_BRACKET[')']

numberExpr := TOK_INTEGER | TOK_DOUBLE
parenthesisExpr := TOK_ROUND_LEFT_BRACKET['(']
					   expression*
				   TOK_ROUND_RIGHT_BRACKET[')'] 					  
patternExpr := identifierExpr TOK_COLON identifierExpr (TOK_OP_IMPLICATION identifierExpr)*					  
binoprhs := (TOK_OP_IMPLICATION |
			 TOK_OP_MUL |
			 TOK_OP_DIV |
			 TOK_OP_MOD |
 			 TOK_OP_SUB |
			 TOK_OP_ADD |
			 TOK_OP_POWER) primary		

